{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","pageCounter","Math","ceil","i","push","className","classNames","disabled","onClick","href","map","page","active","items","from","to","numbers","n","getNumbers","length","App","useState","itemsOnPage","setItemsOnPage","selectedPage","setSelectedPage","preparedListOfItemsOnPage","slice","START","END","defaultValue","onChange","event","target","value","id","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAS1C,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAkB,GAClBC,EAAcC,KAAKC,KAAKP,EAAQC,GAE7BO,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EACrCJ,EAAMK,KAAKD,GAGb,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YACxB,CACEC,SAA0B,IAAhBV,IAFd,SAKE,mBACEW,QAAS,kBAAsB,IAAhBX,GAAqBC,EAAaD,EAAc,IAC/D,UAAQ,WACRQ,UAAU,YACVI,KAAK,QACL,gBAA+B,IAAhBZ,EAAoB,OAAS,QAL9C,oBAUDE,EAAMW,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAW,YACpB,CACEM,OAAQD,IAASd,IAHvB,SAOE,mBACEW,QAAS,kBAAMX,IAAgBc,GAAQb,EAAaa,IACpD,UAAQ,WACRN,UAAU,YACVI,KAAK,KAJP,SAMGE,KAREA,MAYT,oBAAIN,UAAWC,IAAW,YACxB,CACEC,SAAUV,IAAgBG,IAF9B,SAKE,mBACEQ,QAAS,kBAAMX,IAAgBG,GAC1BF,EAAaD,EAAc,IAChC,UAAQ,WACRQ,UAAU,YACVI,KAAK,QACL,gBAAeZ,IAAgBG,EAAc,OAAS,QANxD,wBCzDFa,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQZ,KAAKa,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEdtB,EAAQkB,EAAMM,OAEPC,EAAgB,WAM3B,IALA,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAwC,GAErCvB,EAAI,EAAGA,EAAIR,EAAOQ,GAAKmB,EAC9BI,EAA0BtB,KAAKS,EAAMc,MAAMxB,EAAGA,EAAImB,IAGpD,IAAMM,EAAQJ,EAAeF,EAAcA,EAAc,EACnDO,GAAOL,EAAe,GAAKF,EAC7BI,EAA0BF,EAAe,GAAGL,OAEhD,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWmB,EADX,mBACkCI,EADlC,cAC6CC,EAD7C,eACuDlC,EADvD,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEyB,aAAa,IACbC,SAAU,SAAAC,GACRT,GAAgBS,EAAMC,OAAOC,OAER,IAAjBV,GACFC,EAAgB,IAGpB,UAAQ,kBACRU,GAAG,kBACH9B,UAAU,eAXZ,UAaE,wBAAQ6B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAAS0B,EACTzB,YAAa2B,EACb1B,aAAc2B,IAGhB,6BACGC,EAA0BF,EAAe,GAAGd,KAAI,SAAA2B,GAAI,OACnD,oBAAI,UAAQ,OAAZ,SACGA,GADoB,iBEnEjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f36c9a5b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages: number[] = [];\n  const pageCounter = Math.ceil(total / perPage);\n\n  for (let i = 1; i <= pageCounter; i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item',\n        {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          onClick={() => currentPage !== 1 && onPageChange(currentPage - 1)}\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          className={classNames('page-item',\n            {\n              active: page === currentPage,\n            })}\n          key={page}\n        >\n          <a\n            onClick={() => currentPage !== page && onPageChange(page)}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#1\"\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classNames('page-item',\n        {\n          disabled: currentPage === pageCounter,\n        })}\n      >\n        <a\n          onClick={() => currentPage !== pageCounter\n            && onPageChange(currentPage + 1)}\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageCounter ? 'true' : 'false'}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst total = items.length;\n\nexport const App: React.FC = () => {\n  const [itemsOnPage, setItemsOnPage] = useState(5);\n  const [selectedPage, setSelectedPage] = useState(1);\n\n  const preparedListOfItemsOnPage: string[][] = [];\n\n  for (let i = 0; i < total; i += itemsOnPage) {\n    preparedListOfItemsOnPage.push(items.slice(i, i + itemsOnPage));\n  }\n\n  const START = selectedPage * itemsOnPage - itemsOnPage + 1;\n  const END = (selectedPage - 1) * itemsOnPage\n    + preparedListOfItemsOnPage[selectedPage - 1].length;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${START} - ${END} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            defaultValue=\"5\"\n            onChange={event => {\n              setItemsOnPage(+event.target.value);\n\n              if (selectedPage !== 1) {\n                setSelectedPage(1);\n              }\n            }}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={total}\n        perPage={itemsOnPage}\n        currentPage={selectedPage}\n        onPageChange={setSelectedPage}\n      />\n\n      <ul>\n        {preparedListOfItemsOnPage[selectedPage - 1].map(item => (\n          <li data-cy=\"item\" key=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}